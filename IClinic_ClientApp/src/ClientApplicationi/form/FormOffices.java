/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormOffices.java
 *
 * Created on Jun 25, 2010, 9:16:16 PM
 */

package ClientApplicationi.form;

import com.mysql.jdbc.Statement;
import ClientApplication.FormClient;
import ClientApplication.model.TableModelOffice;
import Database.Entity.offices;
import Database.Service.officesService;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Madridista
 */
public class FormOffices extends javax.swing.JFrame {

    private TableModelOffice tableModelOffice = new TableModelOffice();
    private officesService kantorService;
    /** Creates new form FormOffices */
    public FormOffices(officesService kantorService) throws RemoteException, NotBoundException {

        this.kantorService = kantorService;
        try{
            tableModelOffice.setData(this.kantorService.getOffice());
        }catch(RemoteException exception){
            exception.printStackTrace();
        }
        initComponents();
        

        Table_Office.setModel(tableModelOffice);
        Table_Office.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                int row = Table_Office.getSelectedRow();
                 if(row != -1){
                   offices kantor = tableModelOffice.get(row);
                   officeCode.setText(kantor.getofficeCode());
                   city.setText(kantor.getcity());
                   phone.setText(kantor.getphone());
                   addressLine1.setText(kantor.getaddressLine1());
                   addressLine2.setText(kantor.getaddressLine2());
                   state.setText(kantor.getstate());
                   country.setText(kantor.getcountry());
                   postalCode.setText(kantor.getpostalCode());
                   territory.setText(kantor.getterritory());
                 }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Office = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        City = new javax.swing.JLabel();
        OfficeCode = new javax.swing.JLabel();
        AddressLine1 = new javax.swing.JLabel();
        Phone = new javax.swing.JLabel();
        AddressLine2 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        addressLine1 = new javax.swing.JTextField();
        addressLine2 = new javax.swing.JTextField();
        city = new javax.swing.JTextField();
        State = new javax.swing.JLabel();
        state = new javax.swing.JTextField();
        Country = new javax.swing.JLabel();
        country = new javax.swing.JTextField();
        PostalCode = new javax.swing.JLabel();
        postalCode = new javax.swing.JTextField();
        territory = new javax.swing.JTextField();
        Territory = new javax.swing.JLabel();
        officeCode = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        Insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table_Office.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_Office);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("BARANG"));

        City.setText("City");

        OfficeCode.setText("Office Code");

        AddressLine1.setText("Address Line 1");

        Phone.setText("Phone");

        AddressLine2.setText("Address Line 2");

        State.setText("State");

        Country.setText("Country");

        PostalCode.setText("Postal Code");

        Territory.setText("Postal Code");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(OfficeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(officeCode))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(city))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(State, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Country, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Territory, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(territory, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OfficeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(officeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phone)
                    .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddressLine1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addressLine2)
                    .addComponent(AddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(State, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(state, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Country, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PostalCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Territory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(territory, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Insert.setText("INSERT");
        Insert.setPreferredSize(new java.awt.Dimension(90, 30));
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });
        jPanel3.add(Insert);

        Update.setText("UPDATE");
        Update.setPreferredSize(new java.awt.Dimension(90, 30));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel3.add(Update);

        Delete.setText("DELETE");
        Delete.setPreferredSize(new java.awt.Dimension(90, 30));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel3.add(Delete);

        Refresh.setText("REFRESH");
        Refresh.setPreferredSize(new java.awt.Dimension(90, 30));
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPanel3.add(Refresh);

        Exit.setText("EXIT");
        Exit.setPreferredSize(new java.awt.Dimension(90, 30));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jPanel3.add(Exit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:

        try{
           List<offices> list = kantorService.getOffice();
           tableModelOffice.setData(list);
        }catch(RemoteException exception){
            exception.printStackTrace();
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:

   if(officeCode.getText().equalsIgnoreCase("")||city.getText().equalsIgnoreCase("")||phone.getText().equalsIgnoreCase("")||addressLine1.getText().equalsIgnoreCase("")||addressLine2.getText().equalsIgnoreCase("")
           ||state.getText().equalsIgnoreCase("")||country.getText().equalsIgnoreCase("")||postalCode.getText().equalsIgnoreCase("")||territory.getText().equalsIgnoreCase("")){
       JOptionPane.showMessageDialog(null, "Data Yang Anda Inputkan Belum Lengkap");

   }
   else{
        String a = officeCode.getText();
        String b = city.getText();
        String c = phone.getText();
        String d = addressLine1.getText();
        String e = addressLine2.getText();
        String f = state.getText();
        String g = country.getText();
        String h = postalCode.getText();
        String i = territory.getText();
        
        try{
           offices kantor = new offices();
           kantor.setofficeCode(a);
           kantor.setcity(b);
           kantor.setphone(c);
           kantor.setaddressLine1(d);
           kantor.setaddressLine2(e);
           kantor.setstate(f);
           kantor.setcountry(g);
           kantor.setpostalCode(h);
           kantor.setterritory(i);

           offices kantor1 = kantorService.insertOffice(kantor);
           tableModelOffice.insert(kantor1);
        }
        catch(RemoteException exception){
            exception.printStackTrace();
        }
   }
   
   try{
           List<offices> list = kantorService.getOffice();
           tableModelOffice.setData(list);
        }catch(RemoteException exception){
            exception.printStackTrace();
        }
    }//GEN-LAST:event_InsertActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
    if(city.getText().equalsIgnoreCase("")||phone.getText().equalsIgnoreCase("")||addressLine1.getText().equalsIgnoreCase("")||addressLine2.getText().equalsIgnoreCase("")
           ||state.getText().equalsIgnoreCase("")||country.getText().equalsIgnoreCase("")||postalCode.getText().equalsIgnoreCase("")||territory.getText().equalsIgnoreCase("")||officeCode.getText().equalsIgnoreCase("")){
       JOptionPane.showMessageDialog(null, "Data Yang Anda Inputkan Belum Lengkap");

    }
    else{

        try{

            int row = Table_Office.getSelectedRow();
            if(row == -1){
                return;
            }
            String a = city.getText();
            String b = phone.getText();
            String c = addressLine1.getText();
            String d = addressLine2.getText();
            String e = state.getText();
            String f = country.getText();
            String g = postalCode.getText();
            String h = territory.getText();
            String i = officeCode.getText();

            offices kantor =tableModelOffice.get(row);
            kantor.setcity(a);
            kantor.setphone(b);
            kantor.setaddressLine1(c);
            kantor.setaddressLine2(d);
            kantor.setstate(e);
            kantor.setcountry(f);
            kantor.setpostalCode(g);
            kantor.setterritory(h);
            kantor.setofficeCode(i);

            kantorService.updateOffice(kantor);
            tableModelOffice.update(row, kantor);
        }
        catch(RemoteException exception){
            exception.printStackTrace();
        }
   }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try{

            int row = Table_Office.getSelectedRow();
            if(row == -1){
                return;
            }
            String OfficeCode = tableModelOffice.get(row).getofficeCode();

            kantorService.deleteOffice(OfficeCode);
            tableModelOffice.delete(row);
        }
        catch(RemoteException exception){
            exception.printStackTrace();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
      this.dispose();
        try {
          FormClient formClient = new FormClient();
            formClient.setVisible(true);
        } catch (RemoteException ex) {
            Logger.getLogger(FormOffices.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(FormOffices.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ExitActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLine1;
    private javax.swing.JLabel AddressLine2;
    private javax.swing.JLabel City;
    private javax.swing.JLabel Country;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Exit;
    private javax.swing.JButton Insert;
    private javax.swing.JLabel OfficeCode;
    private javax.swing.JLabel Phone;
    private javax.swing.JLabel PostalCode;
    private javax.swing.JButton Refresh;
    private javax.swing.JLabel State;
    private javax.swing.JTable Table_Office;
    private javax.swing.JLabel Territory;
    private javax.swing.JButton Update;
    private javax.swing.JTextField addressLine1;
    private javax.swing.JTextField addressLine2;
    private javax.swing.JTextField city;
    private javax.swing.JTextField country;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField officeCode;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField postalCode;
    private javax.swing.JTextField state;
    private javax.swing.JTextField territory;
    // End of variables declaration//GEN-END:variables

}
